name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number' 
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - uses: ./.github/actions/build
    - name: Publish Windows
      run: dotnet publish -r win-x64 --configuration Release -p:PublishSingleFile=true -p:PublishTrimmed=true
    - name: Publish Mac
      run: dotnet publish -r osx-x64 --configuration Release -p:PublishSingleFile=true -p:PublishTrimmed=true
    - name: Publish Linux
      run: dotnet publish -r linux-x64 --configuration Release -p:PublishSingleFile=true -p:PublishTrimmed=true
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: Release ${{ github.event.inputs.version }}
        draft: false
        prerelease: false
    - name: Upload Windows Release Asset
      id: upload-windows-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./src/DockerUpgradeTool/bin/Release/netcoreapp3.1/win-x64/publish/DockerUpgradeTool.exe
        asset_name: docker-upgrade-tool-win-x64.exe
        asset_content_type: application/vnd.microsoft.portable-executable
    - name: Upload Mac Release Asset
      id: upload-mac-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./src/DockerUpgradeTool/bin/Release/netcoreapp3.1/osx-x64/publish/DockerUpgradeTool
        asset_name: docker-upgrade-tool-osx-x64
        asset_content_type: application/octet-stream
    - name: Upload Linux Release Asset
      id: upload-linux-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./src/DockerUpgradeTool/bin/Release/netcoreapp3.1/linux-x64/publish/DockerUpgradeTool
        asset_name: docker-upgrade-tool-linux-x64
        asset_content_type: application/octet-stream
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: itsverywindy/docker-upgrade-tool:${{ github.event.inputs.version }}
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
